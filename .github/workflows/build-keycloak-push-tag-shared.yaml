name: Build Connect Keycloak in Shared (Push Branch)

on:
  push:
    branches:
      - feature/build
      - develop
      # - 'v*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Set variables
        run: |
            TAG=$(echo $GITHUB_REF|cut -d"/" -f3)
            if $(echo  $TAG|grep --silent -e 'v*.*.*-develop*')
            then
              echo "Found environment: DEVELOP - $TAG"
              echo "MANIFESTS_ENVIRONMENT=develop" >> $GITHUB_ENV
              echo "MANIFESTS_ENVIRONMENT=develop"
              echo "TAG=$TAG" >> $GITHUB_ENV
              echo "TAG=$TAG"
              VERSION=${TAG#v}
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              echo "VERSION=$VERSION"
              echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
              echo "COMMIT_SHA=$GITHUB_SHA"
              echo "IMAGE_TAG=keycloak:$TAG" >> $GITHUB_ENV
              echo "IMAGE_TAG=keycloak:$TAG"
            elif $(echo  $TAG|grep --silent -e 'v*.*.*-staging*')
            then
              echo "Found environment: STAGING - $TAG"
              echo "MANIFESTS_ENVIRONMENT=staging" >> $GITHUB_ENV
              echo "MANIFESTS_ENVIRONMENT=staging"
              echo "TAG=$TAG" >> $GITHUB_ENV
              echo "TAG=$TAG"
              VERSION=${TAG#v}
              echo "VERSION=$VERSION" >> $GITHUB_ENV
              echo "VERSION=$VERSION"
              echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
              echo "COMMIT_SHA=$GITHUB_SHA"
              echo "IMAGE_TAG=connectof/keycloak:$TAG" >> $GITHUB_ENV
              echo "IMAGE_TAG=connectof/keycloak:$TAG"
            # elif $(echo  $TAG|grep --silent -e 'v*.*.*')
            # then
              # echo "No environment found, assuming: PRODUCTION - $TAG"
              # echo "MANIFESTS_ENVIRONMENT=production" >> $GITHUB_ENV
              # echo "MANIFESTS_ENVIRONMENT=production"
              # echo "TAG=$TAG" >> $GITHUB_ENV
              # echo "TAG=$TAG"
              # VERSION=${TAG#v}
              # echo "VERSION=$VERSION" >> $GITHUB_ENV
              # echo "VERSION=$VERSION"
              # echo "COMMIT_SHA=$GITHUB_SHA" >> $GITHUB_ENV
              # echo "COMMIT_SHA=$GITHUB_SHA"
              # echo "IMAGE_TAG=connectof/keycloak:$TAG" >> $GITHUB_ENV
              # echo "IMAGE_TAG=connectof/keycloak:$TAG"
            else
              echo 'Not a valid tag. Skipping...'
              exit 1
            fi

      - name: Check out the repo
        uses: actions/checkout@v2
        with:
          ref: ${{env.GITHUB_SHA}}
          repository: Ilhasoft/connect-keycloak

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: 452158872079.dkr.ecr.eu-west-1.amazonaws.com
          username: ${{secrets.AWS_ACCESS_KEY_ID_SHARED}}
          password: ${{secrets.AWS_SECRET_ACCESS_KEY_SHARED}}

      #- name: Login to DockerHub
      #  uses: docker/login-action@v1
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push - Connect Keycloak Image
        id: docker_build1
        uses: docker/build-push-action@v2
        with:
          context: .
          labels: branch=${{env.TAG}},commit=${{env.COMMIT_SHA}},repository=https://github.com/Ilhasoft/connect-keycloak
          file: Dockerfile
          push: true
          tags: ${{env.IMAGE_TAG}}
          no-cache: true

      - name: Check out Kubernetes Manifests
        uses: actions/checkout@master
        with:
          ref: main
          repository: Ilhasoft/kubernetes-manifests-connect
          token: ${{secrets.DEVOPS_GITHUB_PERMANENT_TOKEN}}
          path: ./kubernetes-manifests/

      - name: Update image on deployment
        run: |
          echo 'New configurations:'
          new_configuration=$(
            cat "./kubernetes-manifests/${{env.PROJECT_DIR}}/develop/${{env.PATCH_TARGET}}" \
              | jq '(..|select(.path == "/spec/template/spec/containers/0/image")?) += {value: "'"${{env.REGISTRY_URL}}/${{env.IMAGE_TAG}}"'"}'
          )
          echo "${new_configuration}"
          echo "${new_configuration}" > "./kubernetes-manifests/${{env.PROJECT_DIR}}/develop/${{env.PATCH_TARGET}}"

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.DEVOPS_GITHUB_PERMANENT_TOKEN }}
          repository: Ilhasoft/kubernetes-manifests-connect
          directory: ./kubernetes-manifests/
          branch: main
          message: "From Integrations WebApp Build (Push Branch)"

      - name: Generated Image
        run: |
            echo "IMAGE:      " ${{env.IMAGE_TAG}}
